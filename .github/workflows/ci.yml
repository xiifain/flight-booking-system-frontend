name: ci

on:
  push:
    branches:
      - "main"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NEXT_PUBLIC_SERVER_URL: ${{ secrets.NEXT_PUBLIC_SERVER_URL }}
  NEXT_PUBLIC_GOOGLE_LOGIN_URL: ${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN_URL }}
  NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}

jobs:
  build_image:
    name: Build Image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Info
        run: |
          docker version
          docker info
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile
          platforms: linux/amd64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL}}
            NEXT_PUBLIC_GOOGLE_LOGIN_URL=${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN_URL }}
            NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: build_image
    container: ubuntu:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Deploy in ReadyIDC VM
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.HOST }}
          USER_NAME: ${{ secrets.USERNAME }}
          DOCKER_USER: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        run: |
          apt update && apt upgrade -y
          apt-get install openssh-server -y
          service ssh start
          eval $(ssh-agent -s)
          echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan $HOSTNAME >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          touch .env.deploy
          echo DOCKER_USER=$DOCKER_USER >> .env.deploy
          echo DOCKER_PASSWORD=$DOCKER_PASSWORD >> .env.deploy
          echo REGISTRY_BASE=$REGISTRY >> .env.deploy
          echo REGISTRY=$REGISTRY_IMAGE >> .env.deploy
          scp -o StrictHostKeyChecking=no -r ./.env.deploy $USER_NAME@$HOSTNAME:~/
          ssh $USER_NAME@$HOSTNAME << 'ENDSSH'
            cd ~
            export $(cat .env.deploy | xargs)
            export $(cat .env | xargs)
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $REGISTRY_BASE
            docker image pull $REGISTRY:latest
            docker compose down
            docker compose up -d
            docker logout
            docker image prune -f
          ENDSSH
